{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
          integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
          crossorigin=""/>

    <link rel="stylesheet" href="/css/datatables.min.css">
    <link rel="stylesheet" href="/css/fixedHeader.dataTables.min.css">

{% endblock %}

{% block body %}
    <div class="container my-2">
        <div class="row">
            <div class="col-4">
                <h3>Stations</h3>
            </div>
            <div class="col-8">
                <a href="{{ path('create_station') }}" class="btn btn-success">Add a new station</a>
            </div>
        </div>
    </div>

    <div class="container my-2">
        <div class="row">
            <div class="col-5">
                <table class="table-hover table-bordered display" id="myDataTable" width="100%">
                    <thead>
                    {% set headerRow = "
                        <tr>
                            <th>Code</th>
                            <th>Latitude</th>
                            <th>Longitude</th>
                        </tr>"

                    %}
                    {{ headerRow | raw }}
                    </thead>
                    <tfoot>{{ headerRow | raw }}</tfoot>

                </table>
            </div>


            <div class="col-7">

                <div id="map-stations" style=" width: 600px; height: 500px;"></div>
            </div>
        </div>
    </div>



{% endblock %}


{% block javascripts %}

    <script type="text/javascript" src="/js/datatables.min.js"></script>
    <script src="{{ '/bundles/fosjsrouting/js/router.min.js' }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>

    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>

    <script>
        $(document).ready(function () {
            /////DATATABLES

            // //Add another header below the first
            // $('#myDataTable thead tr').clone().appendTo('#myDataTable thead');
            //
            // //Transform the second header row to have the search input fields
            // $('#myDataTable thead tr:odd th').each( function () {
            //     $(this).html('<input type="text" placeholder="Search" />');
            // });

            $('#myDataTable').DataTable({
                "pageLength":100,
                // dom: "<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>" +
                //     "<'row'<'col-sm-12'tr>>" +
                //     "<'row'<'col-sm-5'i><'col-sm-7'p>>",

                "ajax": {
                    "url": "/api/getStationsGeoJSON",
                    dataSrc:'features'

                },
                "columns": [
                    {"data" : "properties.code"},
                    {"data" : "properties.latitude_rounded"},
                    {"data" : "properties.longitude_rounded"},
                    {"data" : "properties.stationId"},
                ],
                "columnDefs" :[
                    {
                        "targets" : 0,
                        "render" : function (data, type, row) {
                            var stationOutput = '<a href="' + Routing.generate ('display_station', {stationId: row.properties.stationId} ) + '" data-value="'+ data +'">' + data + '</a>';
                            return stationOutput;
                        },
                        "createdCell" : function (cell, cellData, rowData, rowIndex, colIndex) {
                            $(cell).on('mouseenter', function(e){
                                // hovered_id = $(e.target).data('value');
                                hovered_id = $(e.target.firstChild).data('value');
                                console.log(hovered_id);
                            });
                        },
                        "width" : "70px"
                    },
                    {
                        "targets" : -1,
                        "visible" : false,
                    },
                    {"targets": 1, "width" : "50px"}, {"targets": 2, "width" : "50px"}
                ]
            });



            var mapStations = L.map('map-stations').setView([51.4, 3], 9);

            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdDhocW0xN2RnM3ZxeWR5dzVmOHF4In0.6WX6hN8ge0BOad0MRZyEtw'
            }).addTo(mapStations);
            //
            // var stationPoints = new L.geoJson();
            // stationPoints.addTo(mapStations);
            //
            // $.ajax({
            //     dataType: "json",
            //     url: "/api/getStationsGeoJSON",
            //     success: function(data) {
            //         $(data.features).each(function(key, data) {
            //             stationPoints.addData(data);
            //         });
            //     }
            // }).error(function() {});

            $.ajax({
                dataType: "json",
                url: "/api/getStationsGeoJSON",
                success: function(data) {
                    var stations = L.geoJson(data, {
                        pointToLayer: function(feature, latlng) {
                            return new L.CircleMarker(latlng, {
                                radius: 1,
                                color: '#FFA500'
                            });
                        },
                        onEachFeature: function (feature, layer) {
                            layer.bindPopup(feature.properties.code);
                        }
                    });

                    stations.addTo(mapStations);
                }
            })



            // $("#map-stations").on('mouseenter', function(e){
            //     console.log('map');
            // })




        });
    </script>


{% endblock %}